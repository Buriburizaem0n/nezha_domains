// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: proto/nezha.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Host struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Platform        string                 `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	PlatformVersion string                 `protobuf:"bytes,2,opt,name=platform_version,json=platformVersion,proto3" json:"platform_version,omitempty"`
	Cpu             []string               `protobuf:"bytes,3,rep,name=cpu,proto3" json:"cpu,omitempty"`
	MemTotal        uint64                 `protobuf:"varint,4,opt,name=mem_total,json=memTotal,proto3" json:"mem_total,omitempty"`
	DiskTotal       uint64                 `protobuf:"varint,5,opt,name=disk_total,json=diskTotal,proto3" json:"disk_total,omitempty"`
	SwapTotal       uint64                 `protobuf:"varint,6,opt,name=swap_total,json=swapTotal,proto3" json:"swap_total,omitempty"`
	Arch            string                 `protobuf:"bytes,7,opt,name=arch,proto3" json:"arch,omitempty"`
	Virtualization  string                 `protobuf:"bytes,8,opt,name=virtualization,proto3" json:"virtualization,omitempty"`
	BootTime        uint64                 `protobuf:"varint,9,opt,name=boot_time,json=bootTime,proto3" json:"boot_time,omitempty"`
	Version         string                 `protobuf:"bytes,10,opt,name=version,proto3" json:"version,omitempty"`
	Gpu             []string               `protobuf:"bytes,11,rep,name=gpu,proto3" json:"gpu,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Host) Reset() {
	*x = Host{}
	mi := &file_proto_nezha_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nezha_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host.ProtoReflect.Descriptor instead.
func (*Host) Descriptor() ([]byte, []int) {
	return file_proto_nezha_proto_rawDescGZIP(), []int{0}
}

func (x *Host) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Host) GetPlatformVersion() string {
	if x != nil {
		return x.PlatformVersion
	}
	return ""
}

func (x *Host) GetCpu() []string {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *Host) GetMemTotal() uint64 {
	if x != nil {
		return x.MemTotal
	}
	return 0
}

func (x *Host) GetDiskTotal() uint64 {
	if x != nil {
		return x.DiskTotal
	}
	return 0
}

func (x *Host) GetSwapTotal() uint64 {
	if x != nil {
		return x.SwapTotal
	}
	return 0
}

func (x *Host) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *Host) GetVirtualization() string {
	if x != nil {
		return x.Virtualization
	}
	return ""
}

func (x *Host) GetBootTime() uint64 {
	if x != nil {
		return x.BootTime
	}
	return 0
}

func (x *Host) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Host) GetGpu() []string {
	if x != nil {
		return x.Gpu
	}
	return nil
}

type State struct {
	state          protoimpl.MessageState     `protogen:"open.v1"`
	Cpu            float64                    `protobuf:"fixed64,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	MemUsed        uint64                     `protobuf:"varint,2,opt,name=mem_used,json=memUsed,proto3" json:"mem_used,omitempty"`
	SwapUsed       uint64                     `protobuf:"varint,3,opt,name=swap_used,json=swapUsed,proto3" json:"swap_used,omitempty"`
	DiskUsed       uint64                     `protobuf:"varint,4,opt,name=disk_used,json=diskUsed,proto3" json:"disk_used,omitempty"`
	NetInTransfer  uint64                     `protobuf:"varint,5,opt,name=net_in_transfer,json=netInTransfer,proto3" json:"net_in_transfer,omitempty"`
	NetOutTransfer uint64                     `protobuf:"varint,6,opt,name=net_out_transfer,json=netOutTransfer,proto3" json:"net_out_transfer,omitempty"`
	NetInSpeed     uint64                     `protobuf:"varint,7,opt,name=net_in_speed,json=netInSpeed,proto3" json:"net_in_speed,omitempty"`
	NetOutSpeed    uint64                     `protobuf:"varint,8,opt,name=net_out_speed,json=netOutSpeed,proto3" json:"net_out_speed,omitempty"`
	Uptime         uint64                     `protobuf:"varint,9,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Load1          float64                    `protobuf:"fixed64,10,opt,name=load1,proto3" json:"load1,omitempty"`
	Load5          float64                    `protobuf:"fixed64,11,opt,name=load5,proto3" json:"load5,omitempty"`
	Load15         float64                    `protobuf:"fixed64,12,opt,name=load15,proto3" json:"load15,omitempty"`
	TcpConnCount   uint64                     `protobuf:"varint,13,opt,name=tcp_conn_count,json=tcpConnCount,proto3" json:"tcp_conn_count,omitempty"`
	UdpConnCount   uint64                     `protobuf:"varint,14,opt,name=udp_conn_count,json=udpConnCount,proto3" json:"udp_conn_count,omitempty"`
	ProcessCount   uint64                     `protobuf:"varint,15,opt,name=process_count,json=processCount,proto3" json:"process_count,omitempty"`
	Temperatures   []*State_SensorTemperature `protobuf:"bytes,16,rep,name=temperatures,proto3" json:"temperatures,omitempty"`
	Gpu            []float64                  `protobuf:"fixed64,17,rep,packed,name=gpu,proto3" json:"gpu,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *State) Reset() {
	*x = State{}
	mi := &file_proto_nezha_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nezha_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_proto_nezha_proto_rawDescGZIP(), []int{1}
}

func (x *State) GetCpu() float64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *State) GetMemUsed() uint64 {
	if x != nil {
		return x.MemUsed
	}
	return 0
}

func (x *State) GetSwapUsed() uint64 {
	if x != nil {
		return x.SwapUsed
	}
	return 0
}

func (x *State) GetDiskUsed() uint64 {
	if x != nil {
		return x.DiskUsed
	}
	return 0
}

func (x *State) GetNetInTransfer() uint64 {
	if x != nil {
		return x.NetInTransfer
	}
	return 0
}

func (x *State) GetNetOutTransfer() uint64 {
	if x != nil {
		return x.NetOutTransfer
	}
	return 0
}

func (x *State) GetNetInSpeed() uint64 {
	if x != nil {
		return x.NetInSpeed
	}
	return 0
}

func (x *State) GetNetOutSpeed() uint64 {
	if x != nil {
		return x.NetOutSpeed
	}
	return 0
}

func (x *State) GetUptime() uint64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *State) GetLoad1() float64 {
	if x != nil {
		return x.Load1
	}
	return 0
}

func (x *State) GetLoad5() float64 {
	if x != nil {
		return x.Load5
	}
	return 0
}

func (x *State) GetLoad15() float64 {
	if x != nil {
		return x.Load15
	}
	return 0
}

func (x *State) GetTcpConnCount() uint64 {
	if x != nil {
		return x.TcpConnCount
	}
	return 0
}

func (x *State) GetUdpConnCount() uint64 {
	if x != nil {
		return x.UdpConnCount
	}
	return 0
}

func (x *State) GetProcessCount() uint64 {
	if x != nil {
		return x.ProcessCount
	}
	return 0
}

func (x *State) GetTemperatures() []*State_SensorTemperature {
	if x != nil {
		return x.Temperatures
	}
	return nil
}

func (x *State) GetGpu() []float64 {
	if x != nil {
		return x.Gpu
	}
	return nil
}

type State_SensorTemperature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Temperature   float64                `protobuf:"fixed64,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *State_SensorTemperature) Reset() {
	*x = State_SensorTemperature{}
	mi := &file_proto_nezha_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *State_SensorTemperature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State_SensorTemperature) ProtoMessage() {}

func (x *State_SensorTemperature) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nezha_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State_SensorTemperature.ProtoReflect.Descriptor instead.
func (*State_SensorTemperature) Descriptor() ([]byte, []int) {
	return file_proto_nezha_proto_rawDescGZIP(), []int{2}
}

func (x *State_SensorTemperature) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *State_SensorTemperature) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          uint64                 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Data          string                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_proto_nezha_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nezha_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_proto_nezha_proto_rawDescGZIP(), []int{3}
}

func (x *Task) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Task) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Task) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type TaskResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          uint64                 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Delay         float32                `protobuf:"fixed32,3,opt,name=delay,proto3" json:"delay,omitempty"`
	Data          string                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Successful    bool                   `protobuf:"varint,5,opt,name=successful,proto3" json:"successful,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResult) Reset() {
	*x = TaskResult{}
	mi := &file_proto_nezha_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResult) ProtoMessage() {}

func (x *TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nezha_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResult.ProtoReflect.Descriptor instead.
func (*TaskResult) Descriptor() ([]byte, []int) {
	return file_proto_nezha_proto_rawDescGZIP(), []int{4}
}

func (x *TaskResult) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TaskResult) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TaskResult) GetDelay() float32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *TaskResult) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *TaskResult) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type Receipt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Proced        bool                   `protobuf:"varint,1,opt,name=proced,proto3" json:"proced,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Receipt) Reset() {
	*x = Receipt{}
	mi := &file_proto_nezha_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Receipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipt) ProtoMessage() {}

func (x *Receipt) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nezha_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipt.ProtoReflect.Descriptor instead.
func (*Receipt) Descriptor() ([]byte, []int) {
	return file_proto_nezha_proto_rawDescGZIP(), []int{5}
}

func (x *Receipt) GetProced() bool {
	if x != nil {
		return x.Proced
	}
	return false
}

type Uint64Receipt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          uint64                 `protobuf:"varint,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Uint64Receipt) Reset() {
	*x = Uint64Receipt{}
	mi := &file_proto_nezha_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Uint64Receipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uint64Receipt) ProtoMessage() {}

func (x *Uint64Receipt) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nezha_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uint64Receipt.ProtoReflect.Descriptor instead.
func (*Uint64Receipt) Descriptor() ([]byte, []int) {
	return file_proto_nezha_proto_rawDescGZIP(), []int{6}
}

func (x *Uint64Receipt) GetData() uint64 {
	if x != nil {
		return x.Data
	}
	return 0
}

type IOStreamData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IOStreamData) Reset() {
	*x = IOStreamData{}
	mi := &file_proto_nezha_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IOStreamData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IOStreamData) ProtoMessage() {}

func (x *IOStreamData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nezha_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IOStreamData.ProtoReflect.Descriptor instead.
func (*IOStreamData) Descriptor() ([]byte, []int) {
	return file_proto_nezha_proto_rawDescGZIP(), []int{7}
}

func (x *IOStreamData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GeoIP struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Use6              bool                   `protobuf:"varint,1,opt,name=use6,proto3" json:"use6,omitempty"`
	Ip                *IP                    `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	CountryCode       string                 `protobuf:"bytes,3,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	DashboardBootTime uint64                 `protobuf:"varint,4,opt,name=dashboard_boot_time,json=dashboardBootTime,proto3" json:"dashboard_boot_time,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GeoIP) Reset() {
	*x = GeoIP{}
	mi := &file_proto_nezha_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeoIP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoIP) ProtoMessage() {}

func (x *GeoIP) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nezha_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoIP.ProtoReflect.Descriptor instead.
func (*GeoIP) Descriptor() ([]byte, []int) {
	return file_proto_nezha_proto_rawDescGZIP(), []int{8}
}

func (x *GeoIP) GetUse6() bool {
	if x != nil {
		return x.Use6
	}
	return false
}

func (x *GeoIP) GetIp() *IP {
	if x != nil {
		return x.Ip
	}
	return nil
}

func (x *GeoIP) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *GeoIP) GetDashboardBootTime() uint64 {
	if x != nil {
		return x.DashboardBootTime
	}
	return 0
}

type IP struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ipv4          string                 `protobuf:"bytes,1,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6          string                 `protobuf:"bytes,2,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IP) Reset() {
	*x = IP{}
	mi := &file_proto_nezha_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IP) ProtoMessage() {}

func (x *IP) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nezha_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IP.ProtoReflect.Descriptor instead.
func (*IP) Descriptor() ([]byte, []int) {
	return file_proto_nezha_proto_rawDescGZIP(), []int{9}
}

func (x *IP) GetIpv4() string {
	if x != nil {
		return x.Ipv4
	}
	return ""
}

func (x *IP) GetIpv6() string {
	if x != nil {
		return x.Ipv6
	}
	return ""
}

var File_proto_nezha_proto protoreflect.FileDescriptor

const file_proto_nezha_proto_rawDesc = "" +
	"\n" +
	"\x11proto/nezha.proto\x12\x05proto\"\xbf\x02\n" +
	"\x04Host\x12\x1a\n" +
	"\bplatform\x18\x01 \x01(\tR\bplatform\x12)\n" +
	"\x10platform_version\x18\x02 \x01(\tR\x0fplatformVersion\x12\x10\n" +
	"\x03cpu\x18\x03 \x03(\tR\x03cpu\x12\x1b\n" +
	"\tmem_total\x18\x04 \x01(\x04R\bmemTotal\x12\x1d\n" +
	"\n" +
	"disk_total\x18\x05 \x01(\x04R\tdiskTotal\x12\x1d\n" +
	"\n" +
	"swap_total\x18\x06 \x01(\x04R\tswapTotal\x12\x12\n" +
	"\x04arch\x18\a \x01(\tR\x04arch\x12&\n" +
	"\x0evirtualization\x18\b \x01(\tR\x0evirtualization\x12\x1b\n" +
	"\tboot_time\x18\t \x01(\x04R\bbootTime\x12\x18\n" +
	"\aversion\x18\n" +
	" \x01(\tR\aversion\x12\x10\n" +
	"\x03gpu\x18\v \x03(\tR\x03gpu\"\xa9\x04\n" +
	"\x05State\x12\x10\n" +
	"\x03cpu\x18\x01 \x01(\x01R\x03cpu\x12\x19\n" +
	"\bmem_used\x18\x02 \x01(\x04R\amemUsed\x12\x1b\n" +
	"\tswap_used\x18\x03 \x01(\x04R\bswapUsed\x12\x1b\n" +
	"\tdisk_used\x18\x04 \x01(\x04R\bdiskUsed\x12&\n" +
	"\x0fnet_in_transfer\x18\x05 \x01(\x04R\rnetInTransfer\x12(\n" +
	"\x10net_out_transfer\x18\x06 \x01(\x04R\x0enetOutTransfer\x12 \n" +
	"\fnet_in_speed\x18\a \x01(\x04R\n" +
	"netInSpeed\x12\"\n" +
	"\rnet_out_speed\x18\b \x01(\x04R\vnetOutSpeed\x12\x16\n" +
	"\x06uptime\x18\t \x01(\x04R\x06uptime\x12\x14\n" +
	"\x05load1\x18\n" +
	" \x01(\x01R\x05load1\x12\x14\n" +
	"\x05load5\x18\v \x01(\x01R\x05load5\x12\x16\n" +
	"\x06load15\x18\f \x01(\x01R\x06load15\x12$\n" +
	"\x0etcp_conn_count\x18\r \x01(\x04R\ftcpConnCount\x12$\n" +
	"\x0eudp_conn_count\x18\x0e \x01(\x04R\fudpConnCount\x12#\n" +
	"\rprocess_count\x18\x0f \x01(\x04R\fprocessCount\x12B\n" +
	"\ftemperatures\x18\x10 \x03(\v2\x1e.proto.State_SensorTemperatureR\ftemperatures\x12\x10\n" +
	"\x03gpu\x18\x11 \x03(\x01R\x03gpu\"O\n" +
	"\x17State_SensorTemperature\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vtemperature\x18\x02 \x01(\x01R\vtemperature\">\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\x04R\x04type\x12\x12\n" +
	"\x04data\x18\x03 \x01(\tR\x04data\"z\n" +
	"\n" +
	"TaskResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\x04R\x04type\x12\x14\n" +
	"\x05delay\x18\x03 \x01(\x02R\x05delay\x12\x12\n" +
	"\x04data\x18\x04 \x01(\tR\x04data\x12\x1e\n" +
	"\n" +
	"successful\x18\x05 \x01(\bR\n" +
	"successful\"!\n" +
	"\aReceipt\x12\x16\n" +
	"\x06proced\x18\x01 \x01(\bR\x06proced\"#\n" +
	"\rUint64Receipt\x12\x12\n" +
	"\x04data\x18\x01 \x01(\x04R\x04data\"\"\n" +
	"\fIOStreamData\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"\x89\x01\n" +
	"\x05GeoIP\x12\x12\n" +
	"\x04use6\x18\x01 \x01(\bR\x04use6\x12\x19\n" +
	"\x02ip\x18\x02 \x01(\v2\t.proto.IPR\x02ip\x12!\n" +
	"\fcountry_code\x18\x03 \x01(\tR\vcountryCode\x12.\n" +
	"\x13dashboard_boot_time\x18\x04 \x01(\x04R\x11dashboardBootTime\",\n" +
	"\x02IP\x12\x12\n" +
	"\x04ipv4\x18\x01 \x01(\tR\x04ipv4\x12\x12\n" +
	"\x04ipv6\x18\x02 \x01(\tR\x04ipv62\xd2\x02\n" +
	"\fNezhaService\x127\n" +
	"\x11ReportSystemState\x12\f.proto.State\x1a\x0e.proto.Receipt\"\x00(\x010\x01\x121\n" +
	"\x10ReportSystemInfo\x12\v.proto.Host\x1a\x0e.proto.Receipt\"\x00\x123\n" +
	"\vRequestTask\x12\x11.proto.TaskResult\x1a\v.proto.Task\"\x00(\x010\x01\x12:\n" +
	"\bIOStream\x12\x13.proto.IOStreamData\x1a\x13.proto.IOStreamData\"\x00(\x010\x01\x12+\n" +
	"\vReportGeoIP\x12\f.proto.GeoIP\x1a\f.proto.GeoIP\"\x00\x128\n" +
	"\x11ReportSystemInfo2\x12\v.proto.Host\x1a\x14.proto.Uint64Receipt\"\x00B\tZ\a./protob\x06proto3"

var (
	file_proto_nezha_proto_rawDescOnce sync.Once
	file_proto_nezha_proto_rawDescData []byte
)

func file_proto_nezha_proto_rawDescGZIP() []byte {
	file_proto_nezha_proto_rawDescOnce.Do(func() {
		file_proto_nezha_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_nezha_proto_rawDesc), len(file_proto_nezha_proto_rawDesc)))
	})
	return file_proto_nezha_proto_rawDescData
}

var file_proto_nezha_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_nezha_proto_goTypes = []any{
	(*Host)(nil),                    // 0: proto.Host
	(*State)(nil),                   // 1: proto.State
	(*State_SensorTemperature)(nil), // 2: proto.State_SensorTemperature
	(*Task)(nil),                    // 3: proto.Task
	(*TaskResult)(nil),              // 4: proto.TaskResult
	(*Receipt)(nil),                 // 5: proto.Receipt
	(*Uint64Receipt)(nil),           // 6: proto.Uint64Receipt
	(*IOStreamData)(nil),            // 7: proto.IOStreamData
	(*GeoIP)(nil),                   // 8: proto.GeoIP
	(*IP)(nil),                      // 9: proto.IP
}
var file_proto_nezha_proto_depIdxs = []int32{
	2, // 0: proto.State.temperatures:type_name -> proto.State_SensorTemperature
	9, // 1: proto.GeoIP.ip:type_name -> proto.IP
	1, // 2: proto.NezhaService.ReportSystemState:input_type -> proto.State
	0, // 3: proto.NezhaService.ReportSystemInfo:input_type -> proto.Host
	4, // 4: proto.NezhaService.RequestTask:input_type -> proto.TaskResult
	7, // 5: proto.NezhaService.IOStream:input_type -> proto.IOStreamData
	8, // 6: proto.NezhaService.ReportGeoIP:input_type -> proto.GeoIP
	0, // 7: proto.NezhaService.ReportSystemInfo2:input_type -> proto.Host
	5, // 8: proto.NezhaService.ReportSystemState:output_type -> proto.Receipt
	5, // 9: proto.NezhaService.ReportSystemInfo:output_type -> proto.Receipt
	3, // 10: proto.NezhaService.RequestTask:output_type -> proto.Task
	7, // 11: proto.NezhaService.IOStream:output_type -> proto.IOStreamData
	8, // 12: proto.NezhaService.ReportGeoIP:output_type -> proto.GeoIP
	6, // 13: proto.NezhaService.ReportSystemInfo2:output_type -> proto.Uint64Receipt
	8, // [8:14] is the sub-list for method output_type
	2, // [2:8] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_nezha_proto_init() }
func file_proto_nezha_proto_init() {
	if File_proto_nezha_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_nezha_proto_rawDesc), len(file_proto_nezha_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_nezha_proto_goTypes,
		DependencyIndexes: file_proto_nezha_proto_depIdxs,
		MessageInfos:      file_proto_nezha_proto_msgTypes,
	}.Build()
	File_proto_nezha_proto = out.File
	file_proto_nezha_proto_goTypes = nil
	file_proto_nezha_proto_depIdxs = nil
}
